
&НаКлиенте
Процедура ЗагрузитьДокументы(Команда)
	ЗагрузитьДокументыНаСервере();
КонецПроцедуры
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПутьКБазе = "";
	Пользователь = "Администратор";
	Пароль = "P@$$W0RD";

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПутьКБазеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Укажите путь к базе ...";
	
	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКБазе = Диалог.Каталог;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗагрузитьДокументыНаСервере()

	ОткрытаяБаза = ПодключитьсяНаСервере();
	
	ЗагрузитьЗаказыПоставщика(ОткрытаяБаза);
	// ПТУ
	ЗагрузитьПТУ(ОткрытаяБаза);
	ОткрытаяБаза = Неопределено;
КонецПроцедуры


#Область Подключение

&НаСервере
Функция ПодключитьсяНаСервере()
	
	// соединение
	База = Новый COMОбъект("V83.COMConnector");
	ПутьКБазеДляПодключения = "File="""+ СокрЛП(ПутьКБазе) +""";";
	Попытка
		СтрокаСоединения = ПутьКБазеДляПодключения +
			"Usr="""+ СокрЛП(Пользователь) +""";"+
			"Pwd="""+ СокрЛП(Пароль) +""";";
		ОткрытаяБаза = База.Connect(СтрокаСоединения);
		Элементы.Подключиться.Доступность = Ложь;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат ОткрытаяБаза;
	
КонецФункции

#КонецОбласти

#Область Загрузка

&НаСервере
Процедура ЗагрузитьПТУ(ОткрытаяБаза)
	
	// Загрузка документов Поступление ТиУ
	Сообщить("Идет выгрузка документов Поступление из УТ 10.3...");
	
	Выборка = ОткрытаяБаза.Документы.ПоступлениеТоваровУслуг.Выбрать(ДатаНачала, КонецДня(ДатаОкончания));

	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Проведен Тогда
			Продолжить;
		КонецЕсли;
		ОрганизацияДокумента = Справочники.Организации.НайтиПоРеквизиту("ИНН", Выборка.Организация.ИНН);
		Если ОрганизацияДокумента <> Организация Тогда
			Продолжить;
		КонецЕсли;
		ДокументПТУУТ10 = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(ДокументПТУУТ10.Номер, ДокументПТУУТ10.Дата)) Тогда
			// нашел
			Поступление = Документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(ДокументПТУУТ10.Номер, ДокументПТУУТ10.Дата);
			Документ = Поступление.ПолучитьОбъект();
			Документ.Заполнить(Новый Структура);
		Иначе
			// не нашел
			Документ = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
			Документ.Заполнить(Новый Структура);
		КонецЕсли;
		
		ЗаполнитьДокументПоступление(ОткрытаяБаза, Документ, ДокументПТУУТ10);
		ДобавитьДокументВТабличнуюЧасть(Документ);
	КонецЦикла;
	
	Сообщить("Выгрузка документов Поступление из УТ 10.3 завершена.");
		

КонецПроцедуры	

&НаСервере
Процедура ЗагрузитьЗаказыПоставщика(ОткрытаяБаза)

	// Загрузка документов Заказ Покупателя
	Сообщить("Идет выгрузка документов Заказы поставщиков из УТ 10.3...");
	
	Выборка = ОткрытаяБаза.Документы.ЗаказПоставщику.Выбрать(ДатаНачала, КонецДня(ДатаОкончания));

	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли;
		ОрганизацияДокумента = Справочники.Организации.НайтиПоРеквизиту("ИНН", Выборка.Организация.ИНН);
		Если ОрганизацияДокумента <> Организация Тогда
			Продолжить;
		КонецЕсли;
		ДокументИсходный = Выборка.Ссылка;
		
		СуществующийДокумент = Документы.ЗаказПоставщику.НайтиПоНомеру(ДокументИсходный.Номер, ДокументИсходный.Дата);
		Если ЗначениеЗаполнено(СуществующийДокумент) Тогда
			// нашел
			Документ = СуществующийДокумент.ПолучитьОбъект();
			Документ.Заполнить(Новый Структура);
		Иначе
			// не нашел
			Документ = Документы.ЗаказПоставщику.СоздатьДокумент();
			Документ.Заполнить(Новый Структура);
		КонецЕсли;
		
		ЗаполнитьДокументЗаказПоставщику(ОткрытаяБаза, Документ, ДокументИсходный);
		ДобавитьДокументВТабличнуюЧасть(Документ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДокументВТабличнуюЧасть(Документ)
	
	НоваяСтрока = ЗагруженныеДокументы.Добавить();
	НоваяСтрока.Документ = Документ.Ссылка;
	НоваяСтрока.Проведен = Документ.Проведен;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументЗаказПоставщику(ОткрытаяБаза, ДокументПриемник, ДокументИсходный)
	
	ДокументПриемник.Номер           = ДокументИсходный.Номер;
	ДокументПриемник.Дата            = ДокументИсходный.Дата;
	ДокументПриемник.ПометкаУдаления = ДокументИсходный.ПометкаУдаления;
	ДокументПриемник.Партнер         = Справочники.Партнеры.НайтиПоКоду(ДокументИсходный.Контрагент.Код);
	ДокументПриемник.Контрагент      = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокументИсходный.Контрагент.Код));
	ДокументПриемник.Организация     = Организация;
	ДокументПриемник.Договор         = Договор(ДокументПриемник.Контрагент, ДокументИсходный.ДоговорКонтрагента.Наименование);
	ДокументПриемник.Склад           = Справочники.Склады.НайтиПоНаименованию(ДокументИсходный.Склад.Наименование);
	ДокументПриемник.СуммаДокумента  = ДокументИсходный.СуммаДокумента;
	ДокументПриемник.Валюта                = Справочники.Валюты.НайтиПоКоду(ДокументИсходный.ВалютаДокумента.Код);
	
	ТабличнаяЧастьТовары = ДокументИсходный.Товары;
	ТабличнаяЧастьПриемник = ДокументПриемник.Товары;
	ТабличнаяЧастьПриемник.Очистить();
	Для Каждого Строка Из ТабличнаяЧастьТовары Цикл
		НоваяСтрокаТовары = ТабличнаяЧастьПриемник.Добавить();
		НоваяСтрокаТовары.Номенклатура       = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
		НоваяСтрокаТовары.Характеристика     = Характеристика(НоваяСтрокаТовары.Номенклатура, Строка.ХарактеристикаНоменклатуры.Наименование);
		НоваяСтрокаТовары.КоличествоУпаковок = Строка.Количество;
		НоваяСтрокаТовары.Количество         = Строка.Количество;
		НоваяСтрокаТовары.Цена               = Строка.Цена;
		НоваяСтрокаТовары.Сумма              = Строка.Сумма;
		НоваяСтрокаТовары.СуммаНДС           = Строка.СуммаНДС;
		НоваяСтрокаТовары.Склад              = ДокументПриемник.Склад;
		НоваяСтрокаТовары.СтавкаНДС = СтавкаНДС(ОткрытаяБаза, Строка);
	КонецЦикла;
	Если ДокументИсходный.Проведен Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	КонецЕсли;
	
	Попытка
		ДокументПриемник.Записать(РежимЗаписи);
	Исключение
		ДокументПриемник.Записать(РежимЗаписиДокумента.Запись);
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументПоступление(ОткрытаяБаза, ДокументПриемник, ДокументИсходный)
	
	ДокументПриемник.Номер           = ДокументИсходный.Номер;
	ДокументПриемник.Дата            = ДокументИсходный.Дата;
	ДокументПриемник.ПометкаУдаления = ДокументИсходный.ПометкаУдаления;
	ДокументПриемник.Партнер         = Справочники.Партнеры.НайтиПоКоду(ДокументИсходный.Контрагент.Код);
	ДокументПриемник.Контрагент      = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокументИсходный.Контрагент.Код));
	ДокументПриемник.Организация     = Организация;
	ДокументПриемник.Договор         = Договор(ДокументПриемник.Контрагент, ДокументИсходный.ДоговорКонтрагента.Наименование);
	ДокументПриемник.Склад           = Справочники.Склады.НайтиПоНаименованию(ДокументИсходный.СкладОрдер.Наименование);
	ДокументПриемник.СуммаДокумента  = ДокументИсходный.СуммаДокумента;
	// sergey
	ДокументПриемник.Валюта                = Справочники.Валюты.НайтиПоКоду(ДокументИсходный.ВалютаДокумента.Код);
	ДокументПриемник.ВалютаВзаиморасчетов  = Справочники.Валюты.НайтиПоКоду(ДокументИсходный.ВалютаДокумента.Код);
	ДокументПриемник.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	ДокументПриемник.ДатаПлатежа           = ДокументИсходный.Дата;
	
	ТабличнаяЧастьТовары = ДокументИсходный.Товары;
	ТабличнаяЧастьПриемник = ДокументПриемник.Товары;
	ТабличнаяЧастьПриемник.Очистить();
	Для Каждого Строка Из ТабличнаяЧастьТовары Цикл
		НоваяСтрокаТовары = ТабличнаяЧастьПриемник.Добавить();
		НоваяСтрокаТовары.Номенклатура       = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
		НоваяСтрокаТовары.Характеристика     = Характеристика(НоваяСтрокаТовары.Номенклатура, Строка.ХарактеристикаНоменклатуры.Наименование);
		НоваяСтрокаТовары.КоличествоУпаковок = Строка.Количество;
		НоваяСтрокаТовары.Количество         = Строка.Количество;
		НоваяСтрокаТовары.Цена               = Строка.Цена;
		НоваяСтрокаТовары.Сумма              = Строка.Сумма;
		НоваяСтрокаТовары.СуммаНДС           = Строка.СуммаНДС;
		НоваяСтрокаТовары.Склад              = ДокументПриемник.Склад;
		НоваяСтрокаТовары.СтавкаНДС = СтавкаНДС(ОткрытаяБаза, Строка);
	КонецЦикла;
	Если ДокументИсходный.Проведен Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	КонецЕсли;
	
	Попытка
		ДокументПриемник.Записать(РежимЗаписи);
	Исключение
		ДокументПриемник.Записать(РежимЗаписиДокумента.Запись);
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ПоискЭлементов

&НаСервере
Функция СтавкаНДС(ОткрытаяБаза, Строка)
	
	ИмяЗначенияПеречисленияCOM = ОткрытаяБаза.XMLString(Строка.СтавкаНДС);
	ПредставлениеПеречисленияCOM = ОткрытаяБаза.String(Строка.СтавкаНДС); //синоним
	ИмяПеречисленияCOM = Строка.СтавкаНДС.Метаданные().Имя;
	Если ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС10) Тогда
		СтавкаНДС = перечисления.СтавкиНДС.НДС10;
	ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.БезНДС) Тогда
		СтавкаНДС = перечисления.СтавкиНДС.БезНДС;
	ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС0) Тогда
		СтавкаНДС = перечисления.СтавкиНДС.НДС0
	ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС18) Тогда
		СтавкаНДС = перечисления.СтавкиНДС.НДС18;
	КонецЕсли;
	
	Возврат СтавкаНДС;
	
КонецФункции

&НаСервере
Функция Договор(Контрагент, ИмяДоговора)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Наименование", ИмяДоговора);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.Наименование = &Наименование";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция Характеристика(Номенклатура, ИмяХарактеристики)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	Запрос.УстановитьПараметр("НаименованиеПолное", ИмяХарактеристики);
	
	Запрос.Текст = 
	"ВЫБРАТЬ Первые 1
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И ХарактеристикиНоменклатуры.НаименованиеПолное = &НаименованиеПолное";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ЗагрузитьКонтрагентов(ОткрытаяБаза)
		// Загрузка контрагентов
	Сообщить("Идет выгрузка контрагентов из УТ 10.3...");
	СпрУТ103Контрагенты = ОткрытаяБаза.Справочники.Контрагенты;
	Выборка = СпрУТ103Контрагенты.ВыбратьИерархически();

	Пока Выборка.Следующий() Цикл
		
		ЭлтСпрУТ103Контрагенты = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Справочники.Партнеры.НайтиПоКоду(ЭлтСпрУТ103Контрагенты.Код)) Тогда
			// Нашел 
			Если ЭлтСпрУТ103Контрагенты.ЭтоГруппа Тогда
			Иначе
				Партнер = Справочники.Партнеры.НайтиПоКоду(ЭлтСпрУТ103Контрагенты.Код);
				Элемент = Партнер.ПолучитьОбъект();
				Элемент.Наименование = ЭлтСпрУТ103Контрагенты.Наименование;
				Элемент.НаименованиеПолное = ЭлтСпрУТ103Контрагенты.НаименованиеПолное;
				Элемент.Код = ЭлтСпрУТ103Контрагенты.Код;
				Элемент.ПометкаУдаления = ЭлтСпрУТ103Контрагенты.ПометкаУдаления;
				Элемент.Поставщик = ЭлтСпрУТ103Контрагенты.Поставщик;
				Элемент.Клиент = ЭлтСпрУТ103Контрагенты.Покупатель;
				Попытка
					Элемент.Записать();
				Исключение
					Сообщить("	Не записан элемент спр-ка Партнеры: " + ОписаниеОшибки());
				КонецПопытки;
				Партнер = Элемент;
				Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Партнер.Ссылка);
				Элемент = Контрагент.ПолучитьОбъект();
				Элемент.Наименование = ЭлтСпрУТ103Контрагенты.Наименование;
				Элемент.ИНН = ЭлтСпрУТ103Контрагенты.ИНН;
				Элемент.КПП = ЭлтСпрУТ103Контрагенты.КПП;
				Элемент.ПометкаУдаления = ЭлтСпрУТ103Контрагенты.ПометкаУдаления;
				Элемент.ОбособленноеПодразделение = ЭлтСпрУТ103Контрагенты.ОбособленноеПодразделение;
				Если ОткрытаяБаза.XMLString(ЭлтСпрУТ103Контрагенты.ЮрФизлицо) = XMLString(Перечисления.ЮрФизЛицо.ЮрЛицо) Тогда
					Элемент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
					Элемент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
				ИначеЕсли ОткрытаяБаза.XMLString(ЭлтСпрУТ103Контрагенты.ЮрФизлицо) = XMLString(Перечисления.ЮрФизЛицо.ФизЛицо) Тогда
					Элемент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
					Элемент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо; 
				КонецЕсли;
				Попытка
					Элемент.Записать();
				Исключение
					Сообщить("	Не записана группа спр-ка Контрагенты: " + ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		Иначе
			// Не нашел
			Если ЭлтСпрУТ103Контрагенты.ЭтоГруппа Тогда
			Иначе
				НовыйЭлемент = Справочники.Партнеры.СоздатьЭлемент();
				НовыйЭлемент.Наименование = ЭлтСпрУТ103Контрагенты.Наименование;
				НовыйЭлемент.НаименованиеПолное = ЭлтСпрУТ103Контрагенты.НаименованиеПолное;
				НовыйЭлемент.Код = ЭлтСпрУТ103Контрагенты.Код;
				НовыйЭлемент.ПометкаУдаления = ЭлтСпрУТ103Контрагенты.ПометкаУдаления;
				НовыйЭлемент.Поставщик = ЭлтСпрУТ103Контрагенты.Поставщик;
				НовыйЭлемент.Клиент = ЭлтСпрУТ103Контрагенты.Покупатель;
				Попытка
					НовыйЭлемент.Записать();
				Исключение
					Сообщить("	Не записан элемент спр-ка Партнеры: " + ОписаниеОшибки());
				КонецПопытки;
				Партнер = НовыйЭлемент;
				НовыйЭлемент = Справочники.Контрагенты.СоздатьЭлемент();
				НовыйЭлемент.Наименование = ЭлтСпрУТ103Контрагенты.Наименование;
				НовыйЭлемент.ИНН = ЭлтСпрУТ103Контрагенты.ИНН;
				НовыйЭлемент.КПП = ЭлтСпрУТ103Контрагенты.КПП;
				НовыйЭлемент.Партнер = Партнер.Ссылка;
				НовыйЭлемент.ПометкаУдаления = ЭлтСпрУТ103Контрагенты.ПометкаУдаления;
				НовыйЭлемент.ОбособленноеПодразделение = ЭлтСпрУТ103Контрагенты.ОбособленноеПодразделение;
				Если ОткрытаяБаза.XMLString(ЭлтСпрУТ103Контрагенты.ЮрФизлицо) = XMLString(Перечисления.ЮрФизЛицо.ЮрЛицо) Тогда
					НовыйЭлемент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
					НовыйЭлемент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
				ИначеЕсли ОткрытаяБаза.XMLString(ЭлтСпрУТ103Контрагенты.ЮрФизлицо) = XMLString(Перечисления.ЮрФизЛицо.ФизЛицо) Тогда
					НовыйЭлемент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
					НовыйЭлемент.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо; 
				КонецЕсли;
				Попытка
					НовыйЭлемент.Записать();
				Исключение
					Сообщить("	Не записан элемент спр-ка Контрагенты: " + ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	Сообщить("Выгрузка контрагентов из УТ 10.3 завершена.");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСерии(ОткрытаяБаза)
	
	Сообщить("Идет выгрузка Серий номенклатуры из УТ 10.3...");
	СпрУТ103Серии = ОткрытаяБаза.Справочники.СерииНоменклатуры;
	Выборка = СпрУТ103Серии.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		ЭлтСпрУТ103Серии = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", ЭлтСпрУТ103Серии.Код)) Тогда
			// нашел
			Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", ЭлтСпрУТ103Серии.Код);
			Элемент = Серия.ПолучитьОбъект();
			Элемент.Номер = ЭлтСпрУТ103Серии.Код;
			Элемент.ПометкаУдаления = ЭлтСпрУТ103Серии.ПометкаУдаления;
			Элемент.ГоденДо = ЭлтСпрУТ103Серии.СрокГодности;
			Элемент.ВидНоменклатуры = Справочники.Номенклатура.НайтиПоКоду(ЭлтСпрУТ103Серии.Владелец.Код).ВидНоменклатуры;
			Попытка
				Элемент.Записать();
			Исключение
				Сообщить("	Не записан элемент спр-ка Серии: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйЭлемент = Справочники.СерииНоменклатуры.СоздатьЭлемент();
			НовыйЭлемент.Номер = ЭлтСпрУТ103Серии.Код;
			НовыйЭлемент.ПометкаУдаления = ЭлтСпрУТ103Серии.ПометкаУдаления;
			НовыйЭлемент.ГоденДо = ЭлтСпрУТ103Серии.СрокГодности;
			НовыйЭлемент.ВидНоменклатуры = Справочники.Номенклатура.НайтиПоКоду(ЭлтСпрУТ103Серии.Владелец.Код).ВидНоменклатуры;
			Попытка
				НовыйЭлемент.Записать();
			Исключение
				Сообщить("	Не записан элемент спр-ка Серии: " + ОписаниеОшибки() + " по номенклатуре УТ 10.3: ");
				Сообщить("    " + ЭлтСпрУТ103Серии.Владелец.Наименование);
			КонецПопытки;
		КонецЕсли;	
		
	КонецЦикла;
	Сообщить("Выгрузка Серий номенклатуры из УТ 10.3 завершена.");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГТД(ОткрытаяБаза)
	
	Сообщить("Идет выгрузка Номеров ГТД из УТ 10.3...");
	СпрУТ103НомераГТД = ОткрытаяБаза.Справочники.НомераГТД;
	Выборка = СпрУТ103НомераГТД.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		ЭлтСпрУТ103НомерГТД = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Справочники.НомераГТД.НайтиПоКоду(ЭлтСпрУТ103НомерГТД.Код)) Тогда
			// нашел
			НомерГТД = Справочники.НомераГТД.НайтиПоКоду(ЭлтСпрУТ103НомерГТД.Код);
			Элемент = НомерГТД.ПолучитьОбъект();
			Элемент.Код = ЭлтСпрУТ103НомерГТД.Код;
			Элемент.ПометкаУдаления = ЭлтСпрУТ103НомерГТД.ПометкаУдаления;
	        Элемент.СтранаПроисхождения = ПолучитьСтрануПроисхождения(ЭлтСпрУТ103НомерГТД,ОткрытаяБаза);
			Попытка
				Элемент.Записать();
			Исключение
				Сообщить("	Не записан элемент спр-ка НомераГТД: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();
			НовыйЭлемент.Код = ЭлтСпрУТ103НомерГТД.Код;
			НовыйЭлемент.ПометкаУдаления = ЭлтСпрУТ103НомерГТД.ПометкаУдаления;
			НовыйЭлемент.СтранаПроисхождения = ПолучитьСтрануПроисхождения(ЭлтСпрУТ103НомерГТД,ОткрытаяБаза);
			Попытка
				НовыйЭлемент.Записать();
			Исключение
				Сообщить(ЭлтСпрУТ103НомерГТД.Код);
				Сообщить("	Не записан элемент спр-ка НомераГТД: " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;	
	Сообщить("Выгрузка Номеров ГТД из УТ 10.3 завершена.");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗаказы(ОткрытаяБаза)

	// Загрузка документов Заказ Покупателя
	Сообщить("Идет выгрузка документов Заказ покупателя из УТ 10.3...");
	
	ВыбДокУТ10Заказы = ОткрытаяБаза.Документы.ЗаказПокупателя;
	РеализацияТоваровУслуг = ОткрытаяБаза.Документы.РеализацияТоваровУслуг;

	Выборка = ВыбДокУТ10Заказы.Выбрать(НачалоГода(ТекущаяДата()), КонецДня(ТекущаяДата()));         

	Пока Выборка.Следующий() Цикл
		
		ДокУТ10Заказы = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Заказы.Номер, ДокУТ10Заказы.Дата)) Тогда
			// нашел
			Заказ = Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Заказы.Номер, ДокУТ10Заказы.Дата);
			Документ = Заказ.ПолучитьОбъект();
			Документ.Номер = ДокУТ10Заказы.Номер;
			Документ.Дата =  ДокУТ10Заказы.Дата;
			Документ.ПометкаУдаления = ДокУТ10Заказы.ПометкаУдаления;
			Документ.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Заказы.Контрагент.Код);
			Документ.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			Документ.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Заказы.Контрагент.Код);
			Документ.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10Заказы.Контрагент.Код));
			
			Документ.Склад = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Заказы.СкладГруппа.Наименование);
			Документ.СуммаДокумента = ДокУТ10Заказы.СуммаДокумента;
			Документ.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			
			// sergey
			Документ.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний");
			Если Выборка.УчитыватьНДС Тогда 
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			Иначе
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
			КонецЕсли;
			Документ.Статус = Перечисления.СтатусыЗаказовКлиентов.КОбеспечению;
			ВыборкаСоглашение = Справочники.СоглашенияСКлиентами.Выбрать();
			ВыборкаСоглашение.Следующий();
			Документ.Соглашение =  ВыборкаСоглашение.Ссылка;
			Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
			// sergey
			
			ТЧ_Com = ДокУТ10Заказы.Товары;
			ТЧ = Документ.Товары;
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.Цена = Строка.Цена;
				НоваяСтрока.Сумма = Строка.Сумма;
				НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
				
				ИмяЗначенияПеречисленияCOM = ОткрытаяБаза.XMLString(Строка.СтавкаНДС);
				ПредставлениеПеречисленияCOM = ОткрытаяБаза.String(Строка.СтавкаНДС); //синоним
				ИмяПеречисленияCOM = Строка.СтавкаНДС.Метаданные().Имя;
				Если ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС10) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС10;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.БезНДС) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.БезНДС;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС0) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС0
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС18) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
				// sergey
				НоваяСтрока.ДатаОтгрузки = ДокУТ10Заказы.Дата;
				НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.НеТребуется;
			КонецЦикла;
			
			Попытка
				Документ.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Заказа клиента: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйДокумент = Документы.ЗаказКлиента.СоздатьДокумент();
			НовыйДокумент.Номер = ДокУТ10Заказы.Номер;
			НовыйДокумент.Дата =  ДокУТ10Заказы.Дата;			
			НовыйДокумент.ПометкаУдаления = ДокУТ10Заказы.ПометкаУдаления;
			НовыйДокумент.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Заказы.Контрагент.Код);
			НовыйДокумент.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			НовыйДокумент.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Заказы.Контрагент.Код);
			НовыйДокумент.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10Заказы.Контрагент.Код));
			НовыйДокумент.Склад = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Заказы.СкладГруппа.Наименование);
			НовыйДокумент.СуммаДокумента = ДокУТ10Заказы.СуммаДокумента;
			НовыйДокумент.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			// sergey
			Документ.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний");
			Если Выборка.УчитыватьНДС Тогда 
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			Иначе
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
			КонецЕсли;
			ДокРеализация = РеализацияТоваровУслуг.НайтиПоРеквизиту("Сделка", Выборка.Ссылка);
				Документ.Статус = Перечисления.СтатусыЗаказовКлиентов.КОбеспечению;
			ВыборкаСоглашение = Справочники.СоглашенияСКлиентами.Выбрать();
			ВыборкаСоглашение.Следующий();
			Документ.Соглашение =  ВыборкаСоглашение.Ссылка;
			Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
			// sergey
			ТЧ_Com = ДокУТ10Заказы.Товары;
			ТЧ = НовыйДокумент.Товары;
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.Цена = Строка.Цена;
				НоваяСтрока.Сумма = Строка.Сумма;
				НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
				ИмяЗначенияПеречисленияCOM = ОткрытаяБаза.XMLString(Строка.СтавкаНДС);
				ПредставлениеПеречисленияCOM = ОткрытаяБаза.String(Строка.СтавкаНДС); //синоним
				ИмяПеречисленияCOM = Строка.СтавкаНДС.Метаданные().Имя;
				Если ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС10) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС10;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.БезНДС) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.БезНДС;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС0) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС0
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС18) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
				// sergey
				НоваяСтрока.ДатаОтгрузки = ДокУТ10Заказы.Дата;
				НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.НеТребуется;
			КонецЦикла;
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Заказа клиента: " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	Сообщить("Выгрузка документов Заказ Покупателя из УТ 10.3 завершена.");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСчета(ОткрытаяБаза)
	// Загрузка документов Счет
	Сообщить("Идет выгрузка документов Счет на полату из УТ 10.3...");
	
	ВыбДокУТ10Счета = ОткрытаяБаза.Документы.СчетНаОплатуПокупателю;
	Выборка = ВыбДокУТ10Счета.Выбрать(НачалоГода(ТекущаяДата()), КонецДня(ТекущаяДата()));         

	Пока Выборка.Следующий() Цикл
		
		ДокУТ10Счет = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Документы.СчетНаОплатуКлиенту.НайтиПоНомеру(ДокУТ10Счет.Номер, ДокУТ10Счет.Дата)) Тогда
			// нашел
			Счет = Документы.СчетНаОплатуКлиенту.НайтиПоНомеру(ДокУТ10Счет.Номер, ДокУТ10Счет.Дата);
			Документ = Счет.ПолучитьОбъект();
			Документ.Номер = ДокУТ10Счет.Номер;
			Документ.Дата =  ДокУТ10Счет.Дата;
			Документ.ПометкаУдаления = ДокУТ10Счет.ПометкаУдаления;
			Документ.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Счет.Контрагент.Код);
			Документ.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10Счет.Контрагент.Код));
			Документ.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			Документ.ДокументОснование = Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Счет.ЗаказПокупателя.Номер, ДокУТ10Счет.ЗаказПокупателя.Дата);
			Документ.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Счет.Контрагент.Код);
			Документ.СуммаДокумента = ДокУТ10Счет.СуммаДокумента;
			Документ.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			// sergey
			Документ.ЭтапыГрафикаОплаты.Очистить();
			НовСтр = Документ.ЭтапыГрафикаОплаты.Добавить();
			НовСтр.ДатаПлатежа = ДокУТ10Счет.Дата;
			НовСтр.ПроцентПлатежа	= 100;
			НовСтр.СуммаПлатежа = ДокУТ10Счет.СуммаДокумента;
			Попытка
				Документ.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Счет: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйДокумент = Документы.СчетНаОплатуКлиенту.СоздатьДокумент();
			НовыйДокумент.Номер = ДокУТ10Счет.Номер;
			НовыйДокумент.Дата =  ДокУТ10Счет.Дата;			
			НовыйДокумент.ПометкаУдаления = ДокУТ10Счет.ПометкаУдаления;
			НовыйДокумент.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Счет.Контрагент.Код);
			НовыйДокумент.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10Счет.Контрагент.Код));
			НовыйДокумент.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			НовыйДокумент.ДокументОснование = Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Счет.ЗаказПокупателя.Номер, ДокУТ10Счет.ЗаказПокупателя.Дата);				
			НовыйДокумент.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Счет.Контрагент.Код);
			НовыйДокумент.СуммаДокумента = ДокУТ10Счет.СуммаДокумента;
			НовыйДокумент.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Счет: " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	Сообщить("Выгрузка документов Счет на оплату из УТ 10.3 завершена.");
		
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПеремещение(ОткрытаяБаза)
	// Загрузка документов Перемещение
	Сообщить("Идет выгрузка документов Перемещение из УТ 10.3...");
	
	ВыбДокУТ10Перемещение = ОткрытаяБаза.Документы.ПеремещениеТоваров;
	Выборка = ВыбДокУТ10Перемещение.Выбрать(НачалоГода(ТекущаяДата()), КонецДня(ТекущаяДата()));         

	Пока Выборка.Следующий() Цикл
		
		ДокУТ10Перемещение = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Документы.ПеремещениеТоваров.НайтиПоНомеру(ДокУТ10Перемещение.Номер, ДокУТ10Перемещение.Дата)) Тогда
			// нашел
			Перемещение = Документы.ПеремещениеТоваров.НайтиПоНомеру(ДокУТ10Перемещение.Номер, ДокУТ10Перемещение.Дата);
			Документ = Перемещение.ПолучитьОбъект();
			Документ.Номер = ДокУТ10Перемещение.Номер;
			Документ.Дата =  ДокУТ10Перемещение.Дата;
			Документ.ПометкаУдаления = ДокУТ10Перемещение.ПометкаУдаления;
			Документ.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			Документ.СкладОтправитель = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Перемещение.СкладОтправитель.Наименование);
			Документ.СкладПолучатель = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Перемещение.СкладПолучатель.Наименование);
			
			ТЧ_Com = ДокУТ10Перемещение.Товары;
			ТЧ = Документ.Товары;
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.СтатусУказанияСерий = 2;
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
				КонецЕсли;	
				
				ТЧ1 = Документ.Серии;
			
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока1 = ТЧ1.Добавить();
					НоваяСтрока1.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
					НоваяСтрока1.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
					НоваяСтрока1.Количество = Строка.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
			Попытка
				Документ.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Перемещение: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйДокумент = Документы.ПеремещениеТоваров.СоздатьДокумент();
			НовыйДокумент.Номер = ДокУТ10Перемещение.Номер;
			НовыйДокумент.Дата =  ДокУТ10Перемещение.Дата;			
			НовыйДокумент.ПометкаУдаления = ДокУТ10Перемещение.ПометкаУдаления;
			НовыйДокумент.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			НовыйДокумент.СкладОтправитель = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Перемещение.СкладОтправитель.Наименование);
			НовыйДокумент.СкладПолучатель = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Перемещение.СкладПолучатель.Наименование);
			
			ТЧ_Com = ДокУТ10Перемещение.Товары;
			ТЧ = НовыйДокумент.Товары;
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.СтатусУказанияСерий = 2;
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
				КонецЕсли;	
				
				ТЧ1 = НовыйДокумент.Серии;
				
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока1 = ТЧ1.Добавить();
					НоваяСтрока1.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
					НоваяСтрока1.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
					НоваяСтрока1.Количество = Строка.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Перемещение: " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;

	Сообщить("Выгрузка документов Перемещение из УТ 10.3 завершена.");
	

КонецПроцедуры	

&НаСервере
Процедура ЗагрузитьРТУ(ОткрытаяБаза)
	// Загрузка документов Реализация
	Сообщить("Идет выгрузка документов Реализация из УТ 10.3...");
	
	ВыбДокУТ10Реализация = ОткрытаяБаза.Документы.РеализацияТоваровУслуг;
	Выборка = ВыбДокУТ10Реализация.Выбрать(НачалоГода(ТекущаяДата()), КонецДня(ТекущаяДата()));         

	Пока Выборка.Следующий() Цикл
		
		ДокУТ10Реализация = Выборка.Ссылка;
		СуммаДок = 0;

		Если ЗначениеЗаполнено(Документы.РеализацияТоваровУслуг.НайтиПоНомеру(ДокУТ10Реализация.Номер, ДокУТ10Реализация.Дата)) Тогда
			// нашел
			Реализация = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(ДокУТ10Реализация.Номер, ДокУТ10Реализация.Дата);
			Документ = Реализация.ПолучитьОбъект();
			Документ.Номер = ДокУТ10Реализация.Номер;
			Документ.Дата =  ДокУТ10Реализация.Дата;
			Документ.ПометкаУдаления = ДокУТ10Реализация.ПометкаУдаления;
			Документ.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Реализация.Контрагент.Код);
			Документ.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10Реализация.Контрагент.Код));
			Документ.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			Документ.Склад = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Реализация.Склад.Наименование);
			Документ.СуммаДокумента = ДокУТ10Реализация.СуммаДокумента;
			Документ.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			Если ЗначениеЗаполнено(Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Реализация.Сделка.Номер, ДокУТ10Реализация.Сделка.Дата)) Тогда
				Документ.ЗаказКлиента = Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Реализация.Сделка.Номер, ДокУТ10Реализация.Сделка.Дата);
			КонецЕсли;	
			
			// Sergey
			Документ.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду("643");

			Если Выборка.УчитыватьНДС Тогда 
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			Иначе
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
			КонецЕсли;
			ВыборкаСоглашение = Справочники.СоглашенияСКлиентами.Выбрать();
			ВыборкаСоглашение.Следующий();
			Документ.Соглашение =  ВыборкаСоглашение.Ссылка;
			Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
			Документ.Статус =  Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
			Документ.ЦенаВключаетНДС = истина;
			ТЧ_Com = ДокУТ10Реализация.Товары;
			ТЧ = Документ.Товары;
			ТЧ1 = Документ.Серии;
			ТЧ1.Очистить();
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.СуммаСНДС = Строка.Сумма;
				СуммаДок = СуммаДок + Строка.Сумма;

				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.Цена = Строка.Цена;
				НоваяСтрока.Сумма = Строка.Сумма;
				НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
				НоваяСтрока.СтатусУказанияСерий = 2;
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
				КонецЕсли;
				
				
				ИмяЗначенияПеречисленияCOM = ОткрытаяБаза.XMLString(Строка.СтавкаНДС);
				ПредставлениеПеречисленияCOM = ОткрытаяБаза.String(Строка.СтавкаНДС); //синоним
				ИмяПеречисленияCOM = Строка.СтавкаНДС.Метаданные().Имя;
				Если ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС10) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС10;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.БезНДС) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.БезНДС;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС0) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС0
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС18) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
				
							
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока1 = ТЧ1.Добавить();
					НоваяСтрока1.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
					НоваяСтрока1.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
					НоваяСтрока1.Количество = Строка.Количество;
				КонецЕсли;
				
				НоваяСтрока.ПроцентРучнойСкидки = Строка.ПроцентСкидкиНаценки;
				ТекущаяСтрока = НоваяСтрока;
				
				СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Документ);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму");
				СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
				СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Истина));
				СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
				СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
					Документ.РеализацияПоЗаказам, Документ.ТребуетсяЗалогЗаТару));
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
				
			КонецЦикла;
			Документ.СуммаПредоплаты = СуммаДок;
			Документ.СкидкиРассчитаны = истина;

			Попытка
				Документ.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Реализация: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйДокумент = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
			НовыйДокумент.Номер = ДокУТ10Реализация.Номер;
			НовыйДокумент.Дата =  ДокУТ10Реализация.Дата;			
			НовыйДокумент.ПометкаУдаления = ДокУТ10Реализация.ПометкаУдаления;
			НовыйДокумент.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10Реализация.Контрагент.Код);
			НовыйДокумент.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10Реализация.Контрагент.Код));
			НовыйДокумент.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			НовыйДокумент.Склад = Справочники.Склады.НайтиПоНаименованию(ДокУТ10Реализация.Склад.Наименование);
			НовыйДокумент.СуммаДокумента = ДокУТ10Реализация.СуммаДокумента;
			НовыйДокумент.Валюта = Справочники.Валюты.НайтиПоКоду("643");
			Если ЗначениеЗаполнено(Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Реализация.Сделка.Номер, ДокУТ10Реализация.Сделка.Дата)) Тогда
				НовыйДокумент.ЗаказКлиента = Документы.ЗаказКлиента.НайтиПоНомеру(ДокУТ10Реализация.Сделка.Номер, ДокУТ10Реализация.Сделка.Дата);
			КонецЕсли;	
			// Sergey
			Документ.ЦенаВключаетНДС = истина;
			Документ.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду("643");
			Если Выборка.УчитыватьНДС Тогда 
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			Иначе
				Документ.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
			КонецЕсли;
			ВыборкаСоглашение = Справочники.СоглашенияСКлиентами.Выбрать();
			ВыборкаСоглашение.Следующий();
			Документ.Соглашение =  ВыборкаСоглашение.Ссылка;
			Документ.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
			Документ.Статус =  Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
			
			
			ТЧ_Com = ДокУТ10Реализация.Товары;
			ТЧ = НовыйДокумент.Товары;
			Ч1 = НовыйДокумент.Серии;

			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.СуммаСНДС = Строка.Сумма;
				СуммаДок = СуммаДок + Строка.Сумма;

				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.Цена = Строка.Цена;
				НоваяСтрока.Сумма = Строка.Сумма;
				НоваяСтрока.СуммаНДС = Строка.СуммаНДС;
				НоваяСтрока.СтатусУказанияСерий = 2;
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
				КонецЕсли;
								
				Если ЗначениеЗаполнено(Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код)) Тогда
					НоваяСтрока1 = ТЧ1.Добавить();
					НоваяСтрока1.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
					НоваяСтрока1.Серия = Справочники.СерииНоменклатуры.НайтиПоРеквизиту("Номер", Строка.СерияНоменклатуры.Код);
					НоваяСтрока1.Количество = Строка.Количество;
				КонецЕсли;
				
				ИмяЗначенияПеречисленияCOM = ОткрытаяБаза.XMLString(Строка.СтавкаНДС);
				ПредставлениеПеречисленияCOM = ОткрытаяБаза.String(Строка.СтавкаНДС); //синоним
				ИмяПеречисленияCOM = Строка.СтавкаНДС.Метаданные().Имя;
				Если ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС10) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС10;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.БезНДС) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.БезНДС;
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС0) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС0
				ИначеЕсли ИмяЗначенияПеречисленияCOM = XMLString(Перечисления.СтавкиНДС.НДС18) Тогда
					НоваяСтрока.СтавкаНДС = перечисления.СтавкиНДС.НДС18;
				КонецЕсли;
				НоваяСтрока.ПроцентРучнойСкидки = Строка.ПроцентСкидкиНаценки;

				ТекущаяСтрока = НоваяСтрока;
				
				СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Документ);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
				СтруктураДействий.Вставить("ПересчитатьСумму");
				СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
				СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Истина));
				СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
				СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
					Документ.РеализацияПоЗаказам, Документ.ТребуетсяЗалогЗаТару));
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
			КонецЦикла;
			
			Документ.СуммаПредоплаты = СуммаДок;
			Документ.СкидкиРассчитаны = истина;
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док Реализация: " + ОписаниеОшибки());
			КонецПопытки;

		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Выгрузка документов Реализация из УТ 10.3 завершена.");
	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГТДИмпорт(ОткрытаяБаза)
		// Загрузка документов ГТД Импорт
	Сообщить("Идет выгрузка документов ГТД Импорт из УТ 10.3...");
	
	ВыбДокУТ10ГТД = ОткрытаяБаза.Документы.ГТДИмпорт;
	Выборка = ВыбДокУТ10ГТД.Выбрать(НачалоГода(ТекущаяДата()), КонецДня(ТекущаяДата()));         

	Пока Выборка.Следующий() Цикл
		
		ДокУТ10ГТД = Выборка.Ссылка;
		
		Если ЗначениеЗаполнено(Документы.ТаможеннаяДекларацияИмпорт.НайтиПоНомеру(ДокУТ10ГТД.Номер, ДокУТ10ГТД.Дата)) Тогда
			// нашел
			ГТД = Документы.ТаможеннаяДекларацияИмпорт.НайтиПоНомеру(ДокУТ10ГТД.Номер, ДокУТ10ГТД.Дата);
			Документ = ГТД.ПолучитьОбъект();
			Документ.Номер = ДокУТ10ГТД.Номер;
			Документ.Дата =  ДокУТ10ГТД.Дата;
			Документ.ПометкаУдаления = ДокУТ10ГТД.ПометкаУдаления;
			Документ.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10ГТД.Контрагент.Код);
			Документ.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10ГТД.Контрагент.Код));
			Документ.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			Документ.Валюта = Справочники.Валюты.НайтиПоКоду(ДокУТ10ГТД.ВалютаДокумента.Код);
			Документ.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду(ДокУТ10ГТД.ВалютаДокумента.Код);
			Документ.НомерДекларации = ДокУТ10ГТД.НомерГТД;
			Документ.Поставщик =  Документ.Партнер;
			Документ.Статус = Перечисления.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни;
			Документ.ДатаПлатежа =  ДокУТ10ГТД.Дата;
			Документ.ТаможенныйСбор = ДокУТ10ГТД.ТаможенныйСбор;
			Документ.ТаможенныйШтраф = ДокУТ10ГТД.ТаможенныйШтраф;
			
			ТЧ_Com = ДокУТ10ГТД.Товары;
			ТЧ = Документ.Товары;
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				
				НоваяСтрока.НомерРаздела = Строка.НомерРаздела;
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.ТаможеннаяСтоимость = Строка.ФактурнаяСтоимость;
				НоваяСтрока.СуммаПошлины =  Строка.СуммаПошлины;
				НоваяСтрока.СуммаНДС =   Строка.СуммаНДС;
				НоваяСтрока.Серия = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.ДокументПоступления = Документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(Строка.ДокументПартии.Номер, Строка.ДокументПартии.Дата);
				НоваяСтрока.Склад =  Справочники.Склады.НайтиПоНаименованию(Строка.ДокументПартии.СкладОрдер.Наименование);
			КонецЦикла;		
			ТЧ_Com = ДокУТ10ГТД.Разделы;
			ТЧ = Документ.Разделы;
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.НомерРаздела =  Строка.НомерСтроки;
				НоваяСтрока.ТаможеннаяСтоимость =  Строка.ТаможеннаяСтоимость;
				НоваяСтрока.СтавкаПошлины = Строка.СтавкаПошлины;
				НоваяСтрока.СуммаПошлины =  Строка.СуммаПошлины;
				НоваяСтрока.СуммаНДС =  Строка.СуммаНДС;
			КонецЦикла;
			
			Попытка
				Документ.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док ГТД Импорт: " + ОписаниеОшибки());
			КонецПопытки;
		Иначе
			// не нашел
			НовыйДокумент = Документы.ТаможеннаяДекларацияИмпорт.СоздатьДокумент();
			НовыйДокумент.Номер = ДокУТ10ГТД.Номер;
			НовыйДокумент.Дата =  ДокУТ10ГТД.Дата;
			НовыйДокумент.ПометкаУдаления = ДокУТ10ГТД.ПометкаУдаления;
			НовыйДокумент.Партнер = Справочники.Партнеры.НайтиПоКоду(ДокУТ10ГТД.Контрагент.Код);
			НовыйДокумент.Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", Справочники.Партнеры.НайтиПоКоду(ДокУТ10ГТД.Контрагент.Код));
			НовыйДокумент.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""СИНТЕСТ""");
			НовыйДокумент.Валюта = Справочники.Валюты.НайтиПоКоду(ДокУТ10ГТД.ВалютаДокумента.Код);
			НовыйДокумент.ВалютаВзаиморасчетов = Справочники.Валюты.НайтиПоКоду(ДокУТ10ГТД.ВалютаДокумента.Код);
			НовыйДокумент.НомерДекларации = ДокУТ10ГТД.НомерГТД;
			НовыйДокумент.Поставщик =  Документ.Партнер;
			НовыйДокумент.Статус = Перечисления.СтатусыТаможенныхДеклараций.ВыпущеноСТаможни;
			НовыйДокумент.ДатаПлатежа =  ДокУТ10ГТД.Дата;
			НовыйДокумент.ТаможенныйСбор = ДокУТ10ГТД.ТаможенныйСбор;
			НовыйДокумент.ТаможенныйШтраф = ДокУТ10ГТД.ТаможенныйШтраф;
			
			ТЧ_Com = ДокУТ10ГТД.Товары;
			ТЧ = НовыйДокумент.Товары;
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				
				НоваяСтрока.НомерРаздела = Строка.НомерРаздела;
				НоваяСтрока.Номенклатура = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.Количество = Строка.Количество;
				НоваяСтрока.КоличествоУпаковок = Строка.Количество;
				НоваяСтрока.ТаможеннаяСтоимость = Строка.ФактурнаяСтоимость;
				НоваяСтрока.СуммаПошлины =  Строка.СуммаПошлины;
				НоваяСтрока.СуммаНДС =   Строка.СуммаНДС;
				НоваяСтрока.Серия = Справочники.Номенклатура.НайтиПоКоду(Строка.Номенклатура.Код);
				НоваяСтрока.ДокументПоступления = Документы.ПоступлениеТоваровУслуг.НайтиПоНомеру(Строка.ДокументПартии.Номер, Строка.ДокументПартии.Дата);
				НоваяСтрока.Склад =  Справочники.Склады.НайтиПоНаименованию(Строка.ДокументПартии.СкладОрдер.Наименование);

			КонецЦикла;		
			ТЧ_Com = ДокУТ10ГТД.Разделы;
			ТЧ = НовыйДокумент.Разделы;
			ТЧ.Очистить();
			Для Каждого Строка Из ТЧ_Com Цикл
				НоваяСтрока = ТЧ.Добавить();
				НоваяСтрока.НомерРаздела =  Строка.НомерСтроки;
				НоваяСтрока.ТаможеннаяСтоимость =  Строка.ТаможеннаяСтоимость;
				НоваяСтрока.СтавкаПошлины = Строка.СтавкаПошлины;
				НоваяСтрока.СуммаПошлины =  Строка.СуммаПошлины;
				НоваяСтрока.СуммаНДС =  Строка.СуммаНДС;
			КонецЦикла;
			
			
			Попытка
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			Исключение
				Сообщить("	Не записан док ГТД Импорт: " + ОписаниеОшибки());
			КонецПопытки;

		КонецЕсли;
		
	КонецЦикла;
	
	Сообщить("Выгрузка документов ГТД Импорт из УТ 10.3 завершена.");		
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрануПроисхождения(ЭлтСпрУТ103НомерГТД, ОткрытаяБаза)
	
	Запрос = ОткрытаяБаза.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СерииНоменклатуры.СтранаПроисхождения.Код   как код
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.НомерГТД = &ГТД";


	Запрос.УстановитьПараметр("ГТД", ЭлтСпрУТ103НомерГТД);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	СтранаПроисхождения = Справочники.СтраныМира.ПустаяСсылка();
	Пока Выборка.Следующий() цикл
		КодСтранаПроисхождения = Выборка.код;
	КонецЦикла;	

	Возврат Справочники.СтраныМира.НайтиПоКоду(КодСтранаПроисхождения)
	
КонецФункции	

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ДатаОкончания = ДатаНачала;
КонецПроцедуры


